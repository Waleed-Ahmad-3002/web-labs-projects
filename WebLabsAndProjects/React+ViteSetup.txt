/*
React + Vite Frontend with Routing, Context State, and Backend Integration (No CSS)

Project Structure:
  my-react-vite-app/
  ├── package.json
  ├── vite.config.js
  ├── .gitignore
  ├── index.html
  └── src/
      ├── main.jsx
      ├── App.jsx
      ├── context/
      │   └── ItemContext.jsx
      ├── pages/
      │   ├── Home.jsx
      │   ├── About.jsx
      │   └── Items.jsx
      └── components/
          ├── Header.jsx
          └── Footer.jsx

1. Setup:
   • npm create vite@latest my-react-vite-app -- --template react
   • cd my-react-vite-app
   • Install dependencies:
     npm install
     npm install react-router-dom prop-types

2. Files:

--- .gitignore ---
node_modules/
dist/
.env
*.local

--- vite.config.js ---
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    port: 3000,
    proxy: {
      '/api': 'http://localhost:5000'
    }
  }
})

--- index.html ---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My React + Vite App</title>
</head>
<body>
  <div id="root"></div>
  <script type="module" src="/src/main.jsx"></script>
</body>
</html>

--- src/main.jsx ---
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
)

--- src/context/ItemContext.jsx ---
import React, { createContext, useState, useEffect } from 'react';

export const ItemContext = createContext();

export function ItemProvider({ children }) {
  const [items, setItems] = useState([]);

  useEffect(() => {
    fetch('/api/items')
      .then(res => res.json())
      .then(data => setItems(data))
      .catch(console.error);
  }, []);

  const addItem = name => {
    const newItem = { name };
    fetch('/api/items', {
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newItem)
    })
      .then(res => res.json())
      .then(saved => setItems([...items, saved]))
      .catch(console.error);
  };

  return (
    <ItemContext.Provider value={{ items, addItem }}>
      {children}
    </ItemContext.Provider>
  );
}

--- src/components/Header.jsx ---
import React from 'react';
import { Link } from 'react-router-dom';

export default function Header() {
  return (
    <header>
      <h1>My React + Vite App</h1>
      <nav>
        <Link to="/">Home</Link> |{' '}
        <Link to="/about">About</Link> |{' '}
        <Link to="/items">Items</Link>
      </nav>
    </header>
  );
}

--- src/components/Footer.jsx ---
import React from 'react';

export default function Footer() {
  return (
    <footer>
      <p>&copy; {new Date().getFullYear()} My React + Vite App</p>
    </footer>
  );
}

--- src/pages/Home.jsx ---
import React from 'react';

export default function Home() {
  return (
    <div>
      <h2>Welcome Home</h2>
      <p>This React + Vite app has routing, context state, and backend data.</p>
    </div>
  );
}

--- src/pages/About.jsx ---
import React from 'react';

export default function About() {
  return (
    <div>
      <h2>About This App</h2>
      <p>Built with Vite, React Router, Context API, and a Node.js backend.</p>
    </div>
  );
}

--- src/pages/Items.jsx ---
import React, { useContext, useState } from 'react';
import { ItemContext } from '../context/ItemContext';

export default function Items() {
  const { items, addItem } = useContext(ItemContext);
  const [name, setName] = useState('');

  const handleSubmit = e => {
    e.preventDefault();
    if (name.trim()) { addItem(name); setName(''); }
  };

  return (
    <div>
      <h2>Items</h2>
      <ul>
        {items.map((it, idx) => <li key={idx}>{it.name}</li>)}
      </ul>
      <form onSubmit={handleSubmit}>
        <input
          value={name}
          onChange={e => setName(e.target.value)}
          placeholder="New item"
        />
        <button type="submit">Add</button>
      </form>
    </div>
  );
}

--- src/App.jsx ---
import React from 'react';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import { ItemProvider } from './context/ItemContext';
import Header from './components/Header';
import Footer from './components/Footer';
import Home from './pages/Home';
import About from './pages/About';
import Items from './pages/Items';

export default function App() {
  return (
    <BrowserRouter>
      <ItemProvider>
        <Header />
        <main>
          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/about" element={<About />} />
            <Route path="/items" element={<Items />} />
          </Routes>
        </main>
        <Footer />
      </ItemProvider>
    </BrowserRouter>
  );
}

/*
Simple Node.js + Express Backend (folder: backend/)

--- backend/package.json ---
{
  "name": "backend",
  "version": "1.0.0",
  "main": "server.js",
  "license": "MIT",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.18.2"
  }
}

--- backend/server.js ---
const express = require('express');
const cors = require('cors');
const app = express();
const port = 5000;
app.use(cors());
app.use(express.json());

let items = [{ name: 'Sample Item' }];

app.get('/api/items', (req, res) => {
  res.json(items);
});

app.post('/api/items', (req, res) => {
  const { name } = req.body;
  if (!name) return res.status(400).json({ error: 'Name required' });
  const newItem = { name };
  items.push(newItem);
  res.status(201).json(newItem);
});

app.listen(port, () => console.log(`Server running on http://localhost:${port}`));
*/
